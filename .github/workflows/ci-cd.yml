name: Build and Deploy to Azure Kubernetes Service

on:
  push:
    branches:
      - main  # Trigger on push to main branch
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restore Dependencies
      run: dotnet restore ./WeatherApi.csproj

    - name: Build
      run: dotnet build ./WeatherApi.csproj --configuration Release --no-restore

    - name: Publish
      run: dotnet publish ./WeatherApi.csproj -c Release -o ./publish

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.rgweatheraks_SPN }}

    - name: Log in to Azure Container Registry (ACR)
      run: |
        az acr login --name ${{ secrets.CONTAINER_REGISTRY_LOGIN_SERVER }}

    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ secrets.CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.PROJECT_NAME_FOR_DOCKER }}:${{ github.sha }} .
        docker push ${{ secrets.CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.PROJECT_NAME_FOR_DOCKER }}:${{ github.sha }}

    - name: Set AKS Context
      run: |
        az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.AKS_CLUSTER_NAME }}

    - name: Deploy to AKS
      run: |
        kubectl apply -f deployment.yaml
        kubectl set image deployment/weatherapi weatherapi=${{ secrets.CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.PROJECT_NAME_FOR_DOCKER }}:${{ github.sha }}
